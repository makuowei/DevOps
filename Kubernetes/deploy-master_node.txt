#!/bin/sh

;
; Reference: https://www.tecmint.com/install-a-kubernetes-cluster-on-centos-8/

; Step 1: Prep Firewall, SELINUX

; list uuid and confirm master and nodes are haveing differnet value in virtualized env
cat /sys/class/dmi/id/product_uuid		; list uuid
ip link									; show MAC address

; Disable SElinux
setenforce 0
sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
reboot

; Configure Firewall ports 
firewall-cmd --permanent --add-port=6443/tcp			;Kubernetes API Server
firewall-cmd --permanent --add-port=2379-2380/tcp		;etcd server client
firewall-cmd --permanent --add-port=10250/tcp			;Kubelet API
firewall-cmd --permanent --add-port=10251/tcp			;Kube-scheduler
firewall-cmd --permanent --add-port=10252/tcp			;Kube-controller-manager
firewall-cmd --permanent --add-port=10255/tcp
firewall-cmd â€“reload
modprobe br_netfilter
echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables

; Step 2: Install Docker-CE on CentOS 8
dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
dnf install https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm
dnf install docker-ce
systemctl enable docker
systemctl start docker

; Step 3: Install Kubernetes (Kubeadm) on CentOS 8
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

dnf install kubeadm -y
systemctl enable kubelet
systemctl start kubelet

; Step 4: Create a control-plane Master with kubeadm
swapoff -a				;Disable Swap

kubeadm init			; pre-flight check; create cert; generate kubeconfig files; generate static Pod manifests
; **** Need to copy the generated kubeadm join command for later adding nodes to the cluster 
; 		kubeadm join <ip>:6443 --token <token> --discovery-token-ca-cert-hash sha256:<hash>


; for root 
mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config

; for sudo users
;mkdir -p $HOME/.kube
;sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
;sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl get nodes	;should list master node with Status:NotReady stat

; Step 5: Setup Your Pod Network
; https://kubernetes.io/docs/concepts/cluster-administration/networking/
export kubever=$(kubectl version | base64 | tr -d '\n')
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$kubever

kubectl get nodes	;should list master node with Status:Ready stat
kubectl get pods --all-namespaces --watch



